[["ggplot2.html", "Chapter 5 Plotting with ggplot2 5.1 ggplot2 basics 5.2 An illustration 5.3 Additional resources for graphing", " Chapter 5 Plotting with ggplot2 This chapter covers the basics of plotting with the package, ggplot2. This package is contained within a collection of R packages designed for data science known as the tidyverse. The core tidyverse includes packages that we use in everyday data analysis, including: ggplot2 dplyr tibble To learn more about the tidyverse, visit tidyverse.org. To start working with graphs, first install and load the required package. Remember that you only have to install the package once (see Section 2.3.5 to review R packages). &gt; install.packages(&quot;tidyverse&quot;) # you may not need this command &gt; library(tidyverse) 5.1 ggplot2 basics Building ggplot graphics is typically an iterative process. The function that we use is ggplot(). Then, in the function arguments (i.e., the commands within the parentheses), we define the data set that we want to use with data =, the aesthetics (x- and y-axes) with aes(), and the type of graph with geom. Use the data = argument to specify the data frame you are using to build the plot. Note that the word data in (data = ) is an argument and should not be replaced. For example, if your data frame is named utilities, this line will be ggplot(data = utilities): &gt; ggplot(data = dataframe_name) Next, use aes() to select what variable is to place on the x-axis and which on the y-axis. Note that you are adding this element to the content inside the parentheses of ggplot(). To continue with Step 1, we have: &gt; ggplot(data = name_of_your_data, aes(x = variable_name_x, y = variable_name_y)) Make sure you close off all the parentheses correctly  its a common error in R. If you are only working with only one variable (e.g., getting the histogram of one variable), you will only need to specify the x = argument. Next, we tell R what type of graph wed like to make  points, lines, bars, histograms, etc.  by adding the geoms layer. This layer is outside the parentheses of ggplot() and is connected by a + sign. If we would like the relationship between two variables to be represented by a scatterplot, we can simply add geom_point(). ggplot(data = name_of_your_data, aes(x = variable_name_x, y = variable_name_y)) + geom_point() If we are plotting the histogram of one variable, we add geom_histogram(): ggplot(data = name_of_your_data, aes(x = variable_name_x)) + geom_histogram() ##This is slightly different than the exact commands used in the video but more intuitive following the logic in this instruction. For a bar plot, the geom specification is geom_bar(). Important: The + sign used to add layers must be placed at the end of each line containing a layer. If, instead, the + sign is added in the line before the other layer, ggplot2 will not add the new layer and will return an error message. # This is the correct way of adding layers ggplot( .... ) + geom_point() # This will give you an error message ggplot( .... ) + geom_point() 5.2 An illustration We briefly illustrate the process with a fake data set quiz.csv. It contains the grades for Quiz 1 and Quiz 2 for 120 students (Data are simulated  not real!). There are three variables: id (student id), quiz1 (Grade for Quiz 1), and quiz2 (grade for Quiz 2). First, make sure you set the working directory correctly on your computer and load the packages. Download this data set and read it into your R. Ill just call this data frame quiz. quiz &lt;- read.csv(&quot;quiz.csv&quot;) Im interested in seeing the distribution of grades for Quiz 1, which calls for a histogram. To better understand what work R is doing step by step, you can run these lines one at a time and look at what happens in your RStudio Plots panel after each step. ggplot(data = quiz) ggplot(data = quiz, aes(x = quiz1)) ggplot(data = quiz, aes(x = quiz1)) + geom_histogram() The complete command should be: ggplot(data = quiz, aes(x = quiz1)) + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. You can do the same for Quiz 2 grades: ggplot(data = quiz, aes(x = quiz2)) + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. What if we want to see whether there is a relationship between Quiz 1 and Quiz 2 scores? As you could imagine, these two should be positively correlated  meaning that as one goes up, the other should also go up in general. We use a scatterplot to depict the relationship between two quantitative variables. ggplot(data = quiz, aes(x = quiz1, y = quiz2)) + geom_point() Now Im getting more ambitious  lets label the two axes and add a title! ggplot(data = quiz, aes(x = quiz1, y = quiz2)) + geom_point() + labs(x = &#39;Quiz 1 Grades&#39;, y = &#39;Quiz 2 Grades&#39;, title = &#39;The Relationship b/t Quiz 1 and Quiz 2 Grades in COMM 3710&#39;) 5.3 Additional resources for graphing This guide includes only the basics of graphing with ggplot2. If you have questions that are not covered in this guide, the R Graphics Cookbook is a practical guide that provides recipes for quickly ++ generating high-quality graphs. "]]
