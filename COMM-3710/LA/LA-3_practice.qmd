---
title: "More Practice Working with Data"
format:
   pdf:
      documentclass: article
      geometry:
         - top=20mm
         - left=20mm
         - right=20mm
         - heightrounded
      toc: false
      colorlinks: true
urlcolor: blue
---

# Before we start: Installing R on your personal laptop

Before we start on today's practice assignment, we will install R and RStudio on your personal laptops.

# Setup

1) Create a new R script and set it up for your practice assignment. In the first four (4) lines of your script, include the following, each on a new line, as a comment:

- Full name
- Student ID (u########)
- Date (MM/DD/YY)
- Assignment name

::: callout-tip
Comments (text preceded by `#` in your R script) are not run or executed. R will only run/execute commands or functions (text not preceded by `#`).
:::

2) Install and load the following packages:

- `tidyverse`
- `summarytools`
- `rstatix`

3) Install the packages above using the function, `install.packages()`. Remember that typing the command in your R script does not run or execute the function. You must select the text of the function that you want to run in your script and click "Run" in the top right corner of the script pane (or use the shortcut keys).

4) Load the packages using the `library()` function.

# Entering (More) Data Manually

1) Enter the data in the table below as three separate objects called `educ`, `polviews`, `gunlaw` (whether the respondent supports a law which requires a person to obtain a permit before they can buy a gun), `owngun` (whether the respondent owns a gun), and `numkids` (number of children in their household). There are two data types in the data table, numeric and character.

```{r}
#| label: data
#| echo: false
#| warning: false

library(tidyverse)
library(summarytools)
library(rstatix)
library(kableExtra)

df <- read_csv(here::here("COMM-3710", "LA", "3710-GSS.csv"))

df |> 
  kable(caption = "Data from the 2024 General Social Survey.") |> 
  kable_classic(full_width = FALSE)

```

2) Combine the objects into a single data frame that has a name of your choosing. Use the `tibble()` function to do this. 

3) Check that the data in the data frame match that in Table 1 by calling the data frame in the Console. Copy and paste the output as a comment in your R script.

# Examining Types of Data

4) Determine the class of each column in your data frame. Remember that your template function to do this is: `class(dataframe$variable)`. Copy and paste the class of each column in your R script.

# Creating Data Visualizations

5) Let's visualize some of these data in a bar graph. Copy and paste the code below (we will learn the details of how to do this later in the semester) into your R script and run it. Be sure to change `dataframe` to the name of your dataframe.

```
dataframe |> 
        ggplot(aes(x = polviews, fill = gunlaw)) +
        geom_bar()

```

# Calculating a Mean

6) Lastly, let's calculate the average number of children that respondents in this sample have. Use the function `mean()` to calculate this. Your template for this function is: `mean(dataframe$variable)`.

7) Now we want to save the value that we just calculated into an object so we can use it later. Use the skills you learned last week and practiced this week to save the mean number of children to an object (use any name that you would like). 

8) Call the object (be sure to include the command to call the object in your R script) and copy and paste the answer in your script. Make sure that the answer is commented out in the script. 

---

# Submission

Submit your R script (named `Practice_FirstName-LastName.R`) to Canvas.

Your R script should:

1) Include commands and functions that are necessary to address all the questions in the assignment.
2) Contain comments that answer the questions in the assignment.
3) Run in its entirety without errors.

To ensure that your R script runs without errors, you should:

- Save your script.
- Navigate back to Your Workspace on Posit Cloud.
- Reopen your project.
- Run the entire script line-by-line without editing it to ensure there are no errors.

:::callout-important
These standards apply to all submissions in this course that require R scripts. You should follow these instructions for preparation, naming, and saving of your R script for all of your individual lab assignments.
:::